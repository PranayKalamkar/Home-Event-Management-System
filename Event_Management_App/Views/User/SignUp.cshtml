@model SignUpModel;


@section Styles {
    <link rel="stylesheet" href="~/css/SignUpOrLogin.css" asp-append-version="true" />
}


<div class="outer">
    <div class="login-container registration-container">
        <div class="row">
            <div class="col-12">
                <h3>Register</h3>
                <form id="registerform">

                    <div class="input-group">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { placeholder = "Username..", autocomplete = "off" } })
                        <label asp-for="Username">Full Name:</label>
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-group">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { placeholder = "Email..", autocomplete = "off" } })
                        <label asp-for="Email">Email:</label>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-group">
                        @Html.PasswordFor(model => model.SPassword, new { @placeholder = "Password..", autocomplete = "off" })
                        <label asp-for="SPassword">Password:</label>
                        @Html.ValidationMessageFor(model => model.SPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-group">
                        @Html.PasswordFor(model => model.ConfirmSPassword, new { @placeholder = "Confirm Password..", autocomplete = "off" })
                        <label asp-for="SPassword">Confirm Password:</label>
                        @Html.ValidationMessageFor(model => model.ConfirmSPassword, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group pb-3">
                        <div class="input-field">
                            @Html.DropDownListFor(model => model.Role, new SelectList(new List<Object>()
                            {
                            new { value = 1 , text = "Admin" },
                            new { value = 2 , text = "User"  }
                            }, "value", "text"), "Select Role", new { @class = "w-100 border-0" })
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })


                    <button type="button" id="registerBtn" class="btn btn-success" onclick="SignUp()">Register</button>

                    <div class="register-option">
                        Already have an account? <a asp-controller="User" asp-action="Login">Login</a>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>

    function SignUp() {
        if ($("#registerform").valid()) {
            debugger;
            var loginFormData = {
                Username: $('#Username').val(),
                Email: $('#Email').val(),
                SPassword: $('#SPassword').val(),
                SPassword: $('#ConfirmSPassword').val(),
                Role: $('#Role').val()
            }
            console.log(loginFormData);
            var formData = new FormData();
            formData.append("model", JSON.stringify(loginFormData));

            $.ajax({
                type: "POST",
                url: "/User/SignUpPost",
                data: formData,
                contentType: false,
                processData: false,
                Cache: false,
                success: function (data) {

                    if (data.status === "success") {
                        alert(data.message);
                        window.location.href = "/User/Login";
                    }
                    else if (data.status === "warning") {
                        alert(data.message);
                    }

                },
                error: function (error) {
                    console.error("Error Register user:", error);
                }
            });
        }
    }

</script>